@page "{pagina:int?}"
@model WebApplication1.Pages.IndexModel
@{
    ViewData["Title"] = "Lista de Tareas";
}
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" />

<div class="container mt-5">

    <h1 class="mb-4 text-center text-secondary">Lista de tareas</h1>

    <div class="d-flex justify-content-between mb-3">

        <div>
            <select id="cantidadPorPagina" name="cantidadPorPagina" onchange="cambiarCantidadPagina(this.value)">
    <option value="5" selected="@(Model.TareasPorPagina == 5 ? "selected" : null)">5</option>
    <option value="10" selected="@(Model.TareasPorPagina == 10 ? "selected" : null)">10</option>
    <option value="20" selected="@(Model.TareasPorPagina == 20 ? "selected" : null)">20</option>
</select>

        </div>

        <button class="btn btn-outline-primary" onclick="mostrarFormulario()">Crear tarea</button>

    </div>

    <div id="formularioTarea" class="card p-3 mb-4" style="max-width: 500px; margin: auto; display:none;">
        <form method="post">
            <div class="mb-3">
                <label for="nombreTarea" class="form-label">Nombre</label>
                <input type="text" id="nombreTarea" name="nombreTarea" class="form-control" required />
            </div>
            <div class="mb-3">
                <label for="fechaVencimiento" class="form-label">Fecha de vencimiento</label>
                <input type="date" id="fechaVencimiento" name="fechaVencimiento" class="form-control" required />
            </div>
            <div class="mb-3">
                <label for="estado" class="form-label">Estado</label>
                <select id="estado" name="estado" class="form-select">
                    <option value="Pendiente">Pendiente</option>
                    <option value="En curso">En curso</option>
                    <option value="Finalizado">Finalizado</option>
                    <option value="Cancelado">Cancelado</option>
                </select>
            </div>
            <button type="submit" class="btn btn-primary w-100">Guardar</button>
        </form>
    </div>

    @if (Model.Tareas != null && Model.Tareas.Any())
    {
        <table class="table table-striped table-hover">
            <thead class="table-light">
                <tr>
                    <th>Nombre</th>
                    <th>Fecha vencimiento</th>
                    <th>Estado</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var tarea in Model.Tareas)
                {
                    <tr>
                        <td>@tarea.nombreTarea</td>
                        <td>@tarea.fechaVencimiento</td>
                        <td>
                            <span class="badge @(tarea.estado switch {
                                "Pendiente" => "bg-primary",
                                "En curso" => "bg-warning text-dark",
                                "Finalizado" => "bg-success",
                                "Cancelado" => "bg-danger",
                                _ => "bg-secondary"
                            })">@tarea.estado</span>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
    else
    {
        <div class="alert alert-secondary text-center mt-5">
            No hay tareas para mostrar
        </div>
    }

    <div class="d-flex justify-content-between align-items-center mt-4">

        <div>
            <label for="cantidadPorPagina" class="form-label">Tareas por pagina:</label>
            <select id="cantidadPorPagina" name="cantidadPorPagina" onchange="cambiarCantidadPagina(this.value)">
    <option value="5" selected="@(Model.TareasPorPagina == 5 ? "selected" : null)">5</option>
    <option value="10" selected="@(Model.TareasPorPagina == 10 ? "selected" : null)">10</option>
    <option value="20" selected="@(Model.TareasPorPagina == 20 ? "selected" : null)">20</option>
</select>

        </div>

        <nav>
            <ul class="pagination mb-0">
                @for (int i = 1; i <= Model.TotalPaginas; i++)
                {
                    <li class="page-item @(i == Model.PaginaActual ? "active" : "")">
                        <a class="page-link" asp-page="./Index" asp-route-pagina="@i" asp-route-cantidad="@Model.TareasPorPagina" asp-route-estado="@Model.FiltroEstado">@i</a>
                    </li>
                }
            </ul>
        </nav>

    </div>
</div>

<script>
    function mostrarFormulario() {
        var form = document.getElementById('formularioTarea');
        form.style.display = form.style.display === 'none' ? 'block' : 'none';
    }

    function cambiarCantidadPagina(cantidad) {
        const url = new URL(window.location.href);
        url.searchParams.set('cantidad', cantidad);
        url.searchParams.set('pagina', 1);
        window.location.href = url.toString();
    }

    function filtrarEstado(estado) {
        const url = new URL(window.location.href);
        if (estado) {
            url.searchParams.set('estado', estado);
        } else {
            url.searchParams.delete('estado');
        }
        url.searchParams.set('pagina', 1);
        window.location.href = url.toString();
    }
</script>
